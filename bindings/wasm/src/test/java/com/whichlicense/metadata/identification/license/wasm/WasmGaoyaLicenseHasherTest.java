/*
 * Copyright (c) 2023 - for information on the respective copyright owner
 * see the NOTICE file and/or the repository https://github.com/whichlicense/license-detection-backends.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
package com.whichlicense.metadata.identification.license.wasm;

import com.whichlicense.metadata.identification.license.LicenseHasher;
import com.whichlicense.testing.filecontent.FileContentSource;
import org.junit.jupiter.params.ParameterizedTest;

import static org.assertj.core.api.Assertions.assertThat;

class WasmGaoyaLicenseHasherTest {
    final LicenseHasher hasher = new WasmGaoyaLicenseHasher();

    @ParameterizedTest
    @FileContentSource(path = "/mit.utf8.license")
    void givenUTF8MITLicenseWhenCallingGaoyaIdentifyThenReturnGaoyaMITLicenseHash(String content) {
        assertThat(hasher.computeHash(content)).isEqualTo("[23979,508792,7551869,2465627,3610111,6212274,1179705,2893578,9149882,737367,2885649,2914868,2018522,9552551,2532195,3552687,2859900,2619353,2835658,9175280,667009,1171436,922974,5769632,3926975,1410659,5866543,1557312,6158006,3191298,4477904,1012190,279065,12646961,1786736,1841712,1052959,4446787,7416048,3171762,1912638,179109,2633505,3401768,2822154,761009,2169282,6288845,1649546,1656258,154372,4694856,2696500,1083374,6081591,3566020,668328,677869,5182576,608106,2842141,417531,4783336,951907,2435615,928050,7480372,7304090,835275,1024547,5188599,463135,1411793,1968489,3899707,3105250,346838,8607685,751165,3136801,2542397,3598666,1832541,1074474,2044509,2145618,2299231,1486237,756386,1629506,584507,6741438,2862606,2468941,52762,1019860,2162125,2521308,3811615,41762,3102765,3718377,3449823,2032921,88857,673113,1219204,2568237,775858,1883458,1483882,1554224,1689145,2962158,88772,1308385,6113392,700459,2019817,919810,2154098,53106,1087778,64977,1328877,726149]");
    }

    @ParameterizedTest
    @FileContentSource(path = "/mit.ascii.license")
    void givenASCIIMITLicenseWhenCallingGaoyaIdentifyThenReturnGaoyaMITLicenseHash(String content) {
        assertThat(hasher.computeHash(content)).isEqualTo("[23979,508792,7551869,2465627,3610111,6212274,1179705,1474932,9149882,737367,1513585,2914868,2018522,9552551,2532195,3552687,2108880,2619353,2835658,9175280,667009,1171436,922974,5769632,3926975,1410659,3308762,1557312,6158006,3191298,4477904,1012190,1396252,12646961,1786736,4520744,1052959,4446787,6950684,3171762,1912638,179109,2971548,3401768,2822154,761009,3311287,6288845,1649546,1656258,154372,4498281,2696500,1083374,6081591,3566020,7340599,677869,5182576,608106,2842141,417531,1208280,951907,2435615,928050,7480372,7831929,1041215,666259,5188599,463135,1411793,1968489,32276,1617044,346838,8607685,752133,3136801,601197,3598666,1832541,1074474,3778592,2145618,2299231,1486237,756386,1629506,584507,6741438,5225626,2468941,52762,1019860,2162125,2521308,3811615,41762,3102765,1645123,2925240,2032921,88857,673113,6750269,2568237,775858,1883458,1483882,2536522,1689145,2962158,122285,179568,6113392,700459,2019817,919810,2154098,53106,1087778,64977,1328877,726149]");

    }

    @ParameterizedTest
    @FileContentSource(path = "/mit.stripped.license")
    void givenStrippedMITLicenseWhenCallingGaoyaIdentifyThenReturnGaoyaMITLicenseHash(String content) {
        assertThat(hasher.computeHash(content)).isEqualTo("[23979,508792,7551869,2465627,3610111,6212274,1179705,1474932,9149882,737367,1513585,2914868,2307748,9552551,2532195,3552687,2108880,2619353,2835658,10248856,667009,1171436,922974,5769632,3926975,1410659,3308762,1557312,6158006,3191298,4477904,1012190,1396252,12646961,1786736,4520744,1052959,4446787,6950684,3171762,1912638,179109,2971548,3401768,2822154,761009,3311287,6288845,1649546,1656258,154372,4498281,2696500,1083374,6081591,3566020,7340599,677869,5182576,608106,2842141,417531,1208280,951907,2435615,928050,8146859,7831929,1041215,666259,5188599,463135,1411793,1968489,32276,1617044,346838,8607685,752133,3136801,601197,3598666,1832541,1074474,3778592,2145618,2299231,1486237,756386,1629506,584507,6741438,5225626,2468941,52762,1019860,2162125,2521308,3811615,41762,3102765,1645123,2925240,2032921,88857,673113,6750269,2568237,775858,1883458,1483882,2536522,1689145,2962158,122285,179568,6113392,700459,2019817,919810,2154098,53106,1087778,64977,1328877,726149]");
    }

    @ParameterizedTest
    @FileContentSource(path = "/mit.normalized.license")
    void givenNormalizedMITLicenseWhenCallingGaoyaIdentifyThenReturnGaoyaMITLicenseHash(String content) {
        assertThat(hasher.computeHash(content)).isEqualTo("[23979,2396780,6313269,761130,3610111,1186666,1303932,1508153,4442427,1651964,2338514,1901198,1294498,2578085,4675105,4812751,506803,3099489,902404,331744,1604799,2660917,5558194,339826,570567,5201782,301447,1557312,1341467,1301612,3875153,4423132,1396252,1051108,26873,3744828,338994,694123,16821291,1694619,1969374,1192053,1152261,919957,2699217,761009,3380290,2610592,7844080,2057965,5377804,1673191,2285567,96210,1401256,1755944,1273828,677869,556238,1124392,1261469,417531,3116984,4403883,225841,928050,2411409,1351418,1166061,1024547,3822919,5716166,5612956,3801661,3899707,925585,1100692,4993517,2831376,7677380,2542397,852146,1728453,10486050,1010258,7030255,3037414,4548199,756386,995961,302342,436015,1076049,2342489,8432744,1019860,1214765,7272700,2080569,602298,5505972,4908483,8302555,1089133,1315047,1432922,1163037,1429031,6117001,8750751,1483882,6821708,1646212,4241528,3456040,7221021,759265,1548256,311719,650737,2154098,3706046,1087778,1802404,2961894,10565247]");
    }
}
